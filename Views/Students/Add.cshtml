@model studentmanagement.ViewModels.StudentFormViewModel

@{
    ViewData["Title"] = "Add Student";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<h2>Add Student</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<form asp-action="Add" method="post">
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Age"></label>
        <input asp-for="Age" class="form-control" />
        <span asp-validation-for="Age" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>


    <div class="form-group">
        <label asp-for="DepId">Department</label>
        <select asp-for="DepId" class="form-control" asp-items="@(new SelectList(Model.Departments, "Id", "Name"))">
            <option value="">-- Select Department --</option>
        </select>
        <span asp-validation-for="DepId" class="text-danger"></span>
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Add Student</button>
    <a asp-action="All" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
   }
}
